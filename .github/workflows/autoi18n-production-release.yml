name: autoi18n production release

on: workflow_dispatch

jobs:
  create_distributions:
    name: 'Create distribution for ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: 'Build Native Image'
        run: ./mvnw -B -ntp --file pom.xml -Pnative package
      - name: 'Create distribution'
        run: ./mvnw -B -ntp --file pom.xml -Pdist package -DskipTests
      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            target/distributions/*.zip
            target/distributions/*.tar.gz
  release:
    name: 'Release'
    needs: [ create_distributions ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
      - name: 'Cache Maven packages'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: 'Release with JReleaser'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B -ntp --file pom.xml -Prelease -DartifactsDir=artifacts jreleaser:full-release